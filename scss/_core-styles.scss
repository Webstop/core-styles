@charset 'utf-8';

// Note, Bootstrap Sass must be loaded first.

@import
  'core-styles/variables',
  'core-styles/extend_bootstrap/button',
  'core-styles/extend_bootstrap/card',
  'core-styles/extend_bootstrap/dropdown',
  'core-styles/extend_bootstrap/form',
  'core-styles/extend_bootstrap/grid',
  'core-styles/extend_bootstrap/text',
  'core-styles/utilities',
  'core-styles/layout/site',
  'core-styles/newsprints/newsprint',
  'core-styles/components/checkbox-selector',
  'core-styles/components/search',
  'core-styles/components/tags',
  'core-styles/components/toolbar',
  'core-styles/circulars/circular',
  'core-styles/circulars/circular-item',
  'core-styles/shopping-list/shopping-list-power-bar',
  'core-styles/shopping-list/shopping-list-item',
  'core-styles/stores/stores-list',
  'core-styles/stores/store-list-item',
  'core-styles/coupons',
  'core-styles/price',
  'core-styles/privacy',
  'core-styles/recipes',
  'core-styles/webstop-brand'
;


// NOTE: we originally imported Bootstrap inside core-styles. However, the location of
// the `node_modules` folder is inside the core-styles repo for the core-styles dev site,
// but outside the core-styles folder for everywhere core-styles is installed as a
// node module. For example, in core-customizations Bootstrap and Core-Styles reside
// inside the same `node_modules` folder, so the path in core-styles.scss wouldn't work.
//
// In light of this, our new approach is to have core-styles.scss only contain imports for
// files that are part of the core-styles repo.
